# -*- coding: utf-8 -*-
"""Heart Disease Prediction model.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14UdMysIv_7uBNlQWo3hKt8-uSjbBMu_p
"""

import pandas as pd
heartDDataSet= pd.read_csv('https://archive.ics.uci.edu/ml/machine-learning-databases/heart-disease/processed.cleveland.data',header=None)
print(heartDDataSet)

print(heartDDataSet.shape)

x=heartDDataSet.drop(heartDDataSet.columns[13],axis=1)
y=heartDDataSet.drop(heartDDataSet.columns[:13],axis=1)

print(x)

print(y)

print(y)

#import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
x.replace('?', 0 , inplace=True)
x.replace('None', 0 , inplace=True)
x.fillna(x.mean(), inplace=True)


#import numpy as np
#from sklearn.model_selection import train_test_split
#from sklearn.preprocessing import StandardScaler
#numeric_x = x.select_dtypes(include=['float', 'int'])
#x.replace('?', None , inplace=True)
#numeric_x.fillna(numeric_x.mean(),inplace=True)
#x=pd.concat([numeric_x,x.select_dtypes(exclude=['float', 'int'])],axis=1)
#print(x)

print(x)

scaler = StandardScaler()
x= scaler.fit_transform(x)
x_train,x_test,y_train,y_test=train_test_split(x,y, test_size=0.2)

scaler = StandardScaler()
x= scaler.fit_transform(x)
x_train,x_test,y_train,y_test=train_test_split(x,y, test_size=0.2)

print(x_train)

print(x_test)

from sklearn.linear_model import LogisticRegression
model = LogisticRegression()
model.fit(x_train, y_train)

from sklearn.metrics import accuracy_score

y_pred = model.predict(x_test)
accuracy = accuracy_score(y_test, y_pred)

print("Accuracy:", accuracy)